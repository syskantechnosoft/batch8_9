Design Patterns

JPA  Java Persistence API 
Different approach to interact with DB
Managing the connection

DB Dependent SQL Queries.
Managing the connection pools
DB Locking, Concurrency issues
Caching, Scaling, DR( Disaster Recovery), Backup, Isolation


JPQL  JAVA Persistent Query Lang
HQL Hibernate Query Lang

(Eclipse Link,
Hibernate, Springdata JPA)

hbm  hibernate mapping file(xml)

Annotation 

@Id
@Entity
@Table(optional)
@Column(optional)

@GenerateValue


in-memory h2 database, mysql,postgres

JPARepository<EntityBeanClass,PkeyObjectClass>

findAll()
findById(pkey type)
save(EntityBeanClass object)
update(pkey , EntityBean Object)
removeById(pkey)

findByEmail(String email)



(DP)Desgin Pattern - A optimal solution for a problem.

Core JAVA DP
Adv Java DP

1.Creational Design Pattern
Factory Pattern
Abstract Factory Pattern
Singleton Pattern
Prototype Pattern
Builder Pattern.
2. Structural Design Pattern
Adapter Pattern
Bridge Pattern
Composite Pattern
Decorator Pattern
Facade Pattern
Flyweight Pattern
Proxy Pattern
3. Behavioral Design Pattern
Chain Of Responsibility Pattern
Command Pattern
Interpreter Pattern
Iterator Pattern
Mediator Pattern
Memento Pattern
Observer Pattern
State Pattern
Strategy Pattern
Template Pattern
Visitor Pattern



MVC - Model View Controller
Model (Data)
View (Front End)
Controller ( Connecting & managing the data and it's flow)



Singleton (Only object needs to be created for a class)
Builder


Facede
Decorator

Iterator
Observer

https://www.javatpoint.com/singleton-design-pattern-in-java
